{"version":3,"sources":["components/List/MsgList.js","components/Login/Login.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["MsgList","listItems","this","props","dataList","react_default","a","createElement","List","map","item","ListItem","key","className","nickname","ListItemAvatar","Avatar","Image_default","ListItemText","secondary","text","Component","Login","makeStyles","theme","formControl","margin","spacing","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","demo","alert","handleClose","setState","show","handleShow","handleChange","state","value","headImgStr","headerArr","Dialog","open","onClose","aria-labelledby","aria-describedby","fullWidth","maxWidth","DialogTitle","id","DialogContent","Grid","FormControl","RadioGroup","label","FormControlLabel","control","Radio","color","labelPlacement","TextField","DialogActions","Button","variant","Main","showLogin","event","val","target","which","push","Date","getTime","setTimeout","document","querySelector","scrollTop","refs","_this2","Fragment","Container","fixed","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","Typography","components_List_MsgList","placeholder","multiline","rows","onKeyPress","e","enterText","components_Login_Login","ref","App","components_Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a17880e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\n\nimport \"./MsgList.css\";\n\n\nclass MsgList extends Component{\n  render() {\n    let listItems = this.props.dataList;\n    return (\n      <List>\n        {listItems.map((item) => {\n          return (\n            <ListItem key={item.key} className={item.nickname === '张三' ? 'my-message' : 'people-message'}>\n              <ListItemAvatar>\n                <Avatar>\n                  <ImageIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText secondary={item.text} />\n            </ListItem>\n          )\n        })}\n      </List>\n    );\n  }\n}\n\nexport default MsgList;\n","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      value: '1',\n      nickname: '张三',\n      headImgStr: '',\n      headerArr: [\n        {key:'1',value:'/imgs/head_1.jpeg'},\n        {key:'2',value:'/imgs/head_2.jpeg'},\n        {key:'3',value:'/imgs/head_3.jpeg'},\n        {key:'4',value:'/imgs/head_4.jpeg'},\n        {key:'5',value:'/imgs/head_5.jpeg'},\n        {key:'6',value:'/imgs/head_6.jpeg'}\n      ]\n    }\n  }\n  demo = () => {\n    alert('Login demo method caller');\n  }\n  handleClose = () => {\n    this.setState({ show: false });\n  }\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n  handleChange = () => {\n    alert('handleChange');\n  }\n  render() {\n    return (\n      <Dialog\n        open={this.state.show}\n        onClose={this.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullWidth={true}\n        maxWidth=\"lg\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"请输入您的资料\"}</DialogTitle>\n        <DialogContent>\n          <Grid>\n            <FormControl>\n              <RadioGroup label=\"头像\" value={this.state.value}>\n                <FormControlLabel\n                  value=\"female\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"start\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid>\n            <FormControl>\n              <TextField\n                label=\"昵称：\"\n                value={this.state.nickname}\n              />\n            </FormControl>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n        <Button variant=\"contained\">\n            取消\n          </Button>\n          <Button variant=\"contained\" color=\"primary\">\n            提交\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport MsgList from \"../List/MsgList.js\";\nimport Login from \"../Login/Login.js\";\n\nimport './Main.css';\n\nclass Main extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      // 是否现实登录框\n      showLogin: false,\n      // 数据列表\n      listItems:[\n        { key: 1, nickname: '张三', value: 'Photos', text: '就是可怜的肌肤阿拉山口将大幅拉升的' },\n        { key: 2, nickname: '张三', value: 'Work', text: '就是可怜的肌肤阿拉山口将大幅拉升的' },\n        { key: 3, nickname: '张三', value: 'Vacation', text: '阿克琉斯记得反馈啦技术的开发李建阿斯利康的肌肤脸上看对方' },\n        { key: 4, nickname: '李四', value: 'Tokyo', text: '阿克苏的肌肤卢卡斯就打开了飞机阿斯利康的肌肤卢卡斯觉得浪费空间上来的咖啡机' },\n        { key: 5, nickname: '张三', value: 'HK', text: '看见了卡技术的开发 i 欧文哦日 u 为儿女们，苏丹诺夫' },\n        { key: 6, nickname: '李四', value: 'Photos', text: '就是可怜的肌肤阿拉山口将大幅拉升的' },\n        { key: 7, nickname: '张三', value: 'Work', text: '就是可怜的肌肤阿拉山口将大幅拉升的' },\n        { key: 8, nickname: '张三', value: 'Vacation', text: '阿克琉斯记得反馈啦技术的开发李建阿斯利康的肌肤脸上看对方' }\n      ]\n    }\n  }\n  /** \n   * 输入文本的监听事件\n   * @method    enterText\n   * @params    {Object}    event     原生 JavaScript 事件对象\n   * @return    {void}\n   */\n  enterText (event) {\n    const val = event.target.value;\n    const keyCode = event.which;\n    \n    if (keyCode === 13) {\n      let newArray = this.state.listItems;\n      \n      newArray.push({\n        key: new Date().getTime(), \n        nickname: '张三',\n        value: new Date().getTime(), \n        text: val\n      });\n      this.setState({listItems: this.state.listItems});\n      event.target.value = \"\";\n      setTimeout(() => {\n        // 在这里做一个动画效果比较好\n        document.querySelector(\".contain-list\").scrollTop = 9999999;\n      }, 500);\n    }\n  }\n  // 界面初始化\n  componentDidMount(){\n    // 如果没有 session 那就等于用户下线了，需要重新登陆一次。\n    this.refs['login'].handleShow();\n  }\n  // 界面渲染\n  render() {\n    return (\n      <React.Fragment>\n        <Container fixed className=\"main-container\">\n          <AppBar position=\"static\" className=\"app-title\">\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className=\"typo-title\">\n                Hello 楽\n              </Typography>\n              <Button color=\"inherit\">在线人数：0</Button>\n            </Toolbar>\n          </AppBar>\n          <div className=\"contain-list\">\n            <MsgList dataList={this.state.listItems}></MsgList>\n          </div>\n          <div className=\"footer\">\n            <TextField\n              fullWidth\n              placeholder=\"请输入您的内容\"\n              multiline\n              rows=\"1\"\n              margin=\"none\"\n              variant=\"outlined\"\n              onKeyPress={(e) => {\n                this.enterText(e);\n              }}\n            />\n          </div>\n        </Container>\n        <Login ref=\"login\"></Login>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}